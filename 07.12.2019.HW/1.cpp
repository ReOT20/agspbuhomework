/*Напишите функцию находящую корень монотонной вещественной функции
f бинарным поиском(бисекцией). Можно считать что корень обязательно существует.
Корнем будем считать значение x, такое что |f(x)|<10^(-6).*/

/*Алгоритм эффективен т.к. он всегда испольняется за константное время O(100000).
При больших расстояниях между границами точность не будет сильно уменьшаться,
т.к. при каждой итерации диапазон поиска уменьшается в 2 раза и даже при
придельных значиниях для типа double на уменьшение выборки уйдьёт менее 64 итераций.
Если корень найден, то программа завершается преждевременно.*/

/*Диапазон поиска вводится с клавиатуры. Функция задаётся внутри функции f(x)*/


#include <iostream>
#include <cmath>

double f(double x) {
	return x + 3;
}

int main() {
	double l, r;
	std::cin >> l >> r;
	int i = 0;
	while (i < 100000) {
		if (f((l + r) / 2) > 0) r = (l + r) / 2;
		else if (f((l + r) / 2) < 0) l = (l + r) / 2;
		else break;
		i++;
	}
	std::cout << (l + r) / 2;
	return 0;
}